{
  "author": "CandleSmartHome.com",
  "description": "Privacy friendly voice control. Control devices, set timers, reminders, alarms and more. Supports satellites, so it can be used in multiple rooms. You can also chat with voco through the Matrix messenging network.",
  "content_scripts": [
    {
      "css": [
        "css/extension.css"
      ],
      "js": [
        "js/extension.js"
      ]
    }
  ],  
  "gateway_specific_settings": {
    "webthings": {
      "exec": "python3 {path}/main.py",
	  "primary_type": "adapter",
      "strict_max_version": "*",
      "strict_min_version": "0.10.0"
    }
  },
  "homepage_url": "https://www.candlesmarthome.com/voco-privacy-friendly-voice-control",
  "id": "voco",
  "license": "MPL-2.0",
  "manifest_version": 1,
  "name": "Voco",
  "options": {
    "default": {
	  "Authorization token": "",
      "Metric": true,
      "Microphone": "Auto",
      "Speaker": "Auto",
      "Audio sample rate": "16000",
      "Voice accent": "en-GB",
      "Voice pitch": "1.2",
      "Voice speed": "0.9",
      "Wake word sensitivity": 50,
      "System audio volume": 90,
	  "Disable security": false,
	  "MQTT port": 1885,
	  "Send chat control notifications": false,
	  "Allow notifications when chat is disabled": false,
	  "Show the sentence that Voco heard": false,
	  "Do not break up AI assistant sentences": false,
	  "AI Assistant creativity": 0,
	  "AI Assistant threads": 3,
	  "Custom wake word model URL": "",
	  "Custom AI voice synthesis model url": "",
	  "Custom AI assistant model URL": "",
      "Debugging": false
    },
    "schema": {
      "properties": {
        "Metric": {
          "description": "Check the box to use metric values instead of imperial units. For example: temperature in Celcius or Fahrenheit.",
          "type": "boolean"
        },
        "Wake word sensitivity": {
          "description": "How sensitive should the system be to the wakeword? If it's often waking up when nobody said the actual wakeword, then you could try lowering this sensitivity. The default is 50.",
          "type": "integer",
          "minimum": 10,
          "maximum": 90
        },
        "AI Assistant creativity": {
          "description": "When set to zero, the assistant will give the exact same answer to a specific question every time. Higher values will lead to less predictable responses, which might be useful if you want to use the assistant for creative writing, for example. The default is zero. A popular option is 70.",
          "type": "integer",
          "minimum": 0,
          "maximum": 100
        },
        "AI Assistant threads": {
          "description": "Advanced. How much processing power is the AI assistant allowed to use? A higher setting generally results in a faster response, but at the cost of making the entire system less responsive. The default is 3.",
          "type": "integer",
          "minimum": 1,
          "maximum": 3
        },
        "Do not break up AI assistant sentences": {
          "description": "Normally the AI assistant's responses are broken into chunks of text at both periods and commas. This allows for voice generation to start when just a part of the first sentence is complete. However, this can also lead to strange broken up speech.",
          "type": "boolean"
        },
        "Show the sentence that Voco heard": {
          "description": "Whenever you give a voice command, Voco can show a popup with the sentence it just heard. This can be useful to learn more about how Voco is handling your commands.",
          "type": "boolean"
        },
        "Allow notifications when chat is disabled": {
          "description": "Normally when you disable chat control, Voco also stops sending notifications from your rules to the chatroom. You can allow Voco to keep sending these notifications even when chat control is disabled. The default is to not allow these notifications to go through.",
          "type": "boolean"
        },
        "Microphone": {
          "description": "Advanced. You can manually set the prefered microphone if the automatic selection isn't ok. With a USB microphone it's most likely 'Attached device (1,0)'. Note: the Raspberry Pi does not have a built-in microphone (0,0), the option is only there in case you're running on exotic hardware. Bluetooth microphones are currently not an option.",
          "enum": [
			"Auto",
            "Built-in microphone (0,0)",
			"Built-in microphone, channel 2 (0,1)",
            "Attached device (1,0)",
			"Attached device, channel 2 (1,1)",
            "Second attached device (2,0)",
			"Second attached device, channel 2 (2,1)"
          ],
          "type": "string"
        },
        "Speaker": {
          "description": "Advanced. You would normally choose the audio output through the Voice Control thing. However, here you can 'force' audio to a certain output. Default is 'auto', where it tries to auto-detect the last thing you plugged in (HDMI cable or audio jack). The bluetooth option is experimental, and will only work if you have connected a Bluetooth speaker through the Bluetooth Pairing addon.",
          "enum": [
            "Auto",
            "Headphone jack",
            "HDMI",
			"Bluetooth speaker"
          ],
          "type": "string"
        },
        "Audio sample rate": {
          "description": "Advanced. In rare cases, if you are using a USB speaker you may need to set a specific samplerate before the speaker will play audio, or play it at the correct speed. If you use a Jabra USB speaker you probably have to set this to 48000. The default is 16000.",
          "enum": [
            "16000",
            "44100",
            "48000"
          ],
          "type": "string"
        },
        "Voice accent": {
          "description": "Advanced. Select an accent that you'd like the basic speaking voice to have. Default is en-GB",
          "enum": [
            "en-US", 
            "en-GB"
          ],
          "type": "string"
        },
        "Voice pitch": {
          "description": "Advanced. Select how high or low you'd like to basic voice to sound. Default is 1.2.",
          "enum": [
            "0.5",
            "0.6",
            "0.7",
            "0.8",
            "0.9",
            "1.0",
            "1.1",
            "1.2",
            "1.3",
            "1.4",
            "1.5",
            "1.6",
            "1.7",
            "1.8",
            "1.9",
            "2.0"
          ],
          "type": "string"
        },
        "Voice speed": {
          "description": "Advanced. How fast should the basic voice speak? Default is 0.9.",
          "enum": [
            "0.5",
            "0.6",
            "0.7",
            "0.8",
            "0.9",
            "1.0",
            "1.1",
            "1.2",
            "1.3",
            "1.4",
            "1.5",
            "1.6",
            "1.7",
            "1.8",
            "1.9",
            "2.0"
          ],
          "type": "string"
        },
        "System audio volume": {
          "description": "Advanced. When provided, the system volume will be set to this volume percentage level when Voco starts. This is separate from Voco's own volume, which is relative to the system volume. Can be between 0 and 100 percent. The default is 90.",
          "type": "integer",
          "minimum": 10,
          "maximum": 100
        },
        "Send chat control notifications": {
          "description": "Advanced. If enabled, Voco will send a Matrix notification whenever it can be controlled via chat, or when this control has just been disabled.",
          "type": "boolean"
        },
        "Disable security": {
          "description": "Advanced. Disabling security might make Voco play nice with older/other versions of Candle or the Webthings Gateway.",
          "type": "boolean"
        },
        "MQTT port": {
          "description": "Advanced. By default Candle uses port 1885, but you can override that here by entering a different port number.",
          "type": "integer"
        },
		"Custom wake word model URL": {
		  "description": "Advanced. Provide a URL to a custom wake word model. It must be a .tflite type.",
          "type": "string"
        },
		"Custom AI voice synthesis model URL": {
		  "description": "Advanced. Provide a URL to a custom voice synthesis model. It must be a .ommx type.",
          "type": "string"
        },
		"Custom AI assistant model URL": {
          "description": "Advanced. Provide a URL to a custom AI assistant model. It must be a .guff type.",
          "type": "string"
        },
        "Authorization token": {
          "description": "Advanced. To be allowed to get information on all your devices, you have to create an 'authorization' code. It's basically a very long password. You can generate it yourself under Settings -> Developer -> Create local authorization. Any code you add here will override the code set through the interface.",
          "type": "string"
        },
        "Debugging": {
          "description": "Advanced. Debugging allows you to diagnose any issues with the add-on. If enabled it will result in a lot more debug data in the internal log (which can be found under settings -> developer -> view internal logs).",
          "type": "boolean"
        }
      },
      "required": [],
      "type": "object"
    }
  },
  "short_name": "Voco",
  "version": "4.1.14",
  "web_accessible_resources": [
    "css/*.css",
    "images/*.svg",
    "images/*.png",
    "images/*.gif",
	"images/*.jpg",
	"images/*.jpeg",
	"audio/*.wav",
	"audio/*.mp3",
    "js/*.js",
    "views/*.html"
  ]
}