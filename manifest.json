{
  "author": "CandleSmartHome.com",
  "description": "Privacy friendly voice control. Say 'Hey Snips' to start a voice command.",
  "gateway_specific_settings": {
    "webthings": {
      "exec": "python3 {path}/main.py",
      "primary_type": "adapter",
      "strict_max_version": "*",
      "strict_min_version": "0.10.0"
    }
  },
  "homepage_url": "https://github.com/createcandle/voco",
  "id": "voco",
  "license": "MPL-2.0",
  "manifest_version": 1,
  "name": "Voco",
  "options": {
    "default": {
      "Token": "",
      "Metric": true,
      "Microphone": "Attached device (1,0)",
      "Speaker": "Auto",
      "Voice accent": "en-GB",
      "Voice pitch": "1.2",
      "Voice speed": "0.9",
	  "Hotword sensitivity": "0.5",
	  "MQTT server": "localhost",
	  "MQTT port": "1883",
	  "satellite":false,
      "Debugging": false
    },
    "schema": {
      "properties": {
        "Authorization token": {
          "description": "To be allowed to get information on all your devices, you have to create an 'authorization' code. It's basically a very long password. You can generate it yourself under Settings -> Developer -> Create local authorization",
          "type": "string"
        },
        "Metric": {
          "description": "METRIC. Check the box to use metric values instead of imperial units. For example: temperature in Celcius or Fahrenheit.",
          "type": "boolean"
        },
        "Microphone": {
          "description": "What type of microphone have you connected? With a USB microphone it's most likely 'Attached device (1,0)'. If you want to use the ReSpeaker Pi Hat you will have to intall the drivers manually.",
          "enum": [
            "Built-in microphone (0,0)",
			"Built-in microphone, channel 2 (0,1)",
            "Attached device (1,0)",
			"Attached device, channel 2 (1,1)",
            "Second attached device (2,0)",
			"Second attached device, channel 2 (2,1)"
          ],
          "type": "string"
        },
        "Speaker": {
          "description": "In some cases the Raspberry Pi might be set to a specific audio output. Here you can 'force' it to be a certain output. Default is 'auto'.",
          "enum": [
            "Auto",
            "Headphone jack",
            "HDMI"
          ],
          "type": "string"
        },
        "Voice accent": {
          "description": "Select an accent that you'd like the speaking voice to have. Default is en-GB",
          "enum": [
			      "en-US", 
			      "en-GB"
          ],
          "type": "string"
        },
        "Voice pitch": {
          "description": "Select how high or low you'd like to voice to sound. Default is 1.2.",
          "enum": [
            "0.5",
            "0.6",
            "0.7",
            "0.8",
            "0.9",
            "1.0",
            "1.1",
            "1.2",
            "1.3",
            "1.4",
            "1.5",
            "1.6",
            "1.7",
            "1.8",
            "1.9",
            "2.0"
          ],
          "type": "string"
        },
        "Voice speed": {
          "description": "Select fast should the voice speak? Default is 0.9.",
          "enum": [
            "0.5",
            "0.6",
            "0.7",
            "0.8",
            "0.9",
            "1.0",
            "1.1",
            "1.2",
            "1.3",
            "1.4",
            "1.5",
            "1.6",
            "1.7",
            "1.8",
            "1.9",
            "2.0"
          ],
          "type": "string"
        },
        "Hotword sensitivity": {
          "description": "How sensitive should the system be to 'hey snips'? If it's often responding when nobody said the actual hotword, the you could try lowering this sensitivity. Default is 0.5.",
          "enum": [
              "0.1",
              "0.2",
              "0.3",
              "0.4",
              "0.5",
              "0.6",
              "0.7",
              "0.8",
              "0.9",
              "1.0"
          ],
          "type": "string"
        },
        "MQTT server": {
          "description": "Advanced. You can override what server acts as the MQTT hub. For example, you could set the IP address of the 'main device' that runs Voco in your network. Default is 'localhost', which means it's the device itself.",
          "type": "string"
        },
        "MQTT port": {
          "description": "Advanced. You can override which MQTT port will be used. Default is 1883.",
          "type": "string"
        },
        "Satellite": {
          "description": "Is this device the primary voice control server in your home, or is it a satellite that should talk to another central server? It can only be a satellite if a MQTT server address is set that is not 'localhost'.",
          "type": "boolean"
        },
        "Debugging": {
          "description": "Debugging allows you to diagnose any issues with the add-on. If enabled it will result in a lot more debug data in the internal log (which can be found under settings -> developer -> view internal logs).",
          "type": "boolean"
        }
      },
      "required": [
        "Microphone",
        "Speaker",
        "Token"
      ],
      "type": "object"
    }
  },
  "short_name": "Voco",
  "version": "2.0.0"
}
